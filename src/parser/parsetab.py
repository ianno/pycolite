
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xc5\x8e?\xe3?\xb6L\x08\xb15yC~\x12|A'
    
_lr_action_items = {'AND':([1,2,14,15,16,17,18,19,20,21,22,23,24,],[-12,7,7,7,7,7,7,7,7,7,7,7,7,]),'GLOBAL':([0,3,4,5,6,7,8,9,10,11,12,13,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'EQUALS':([1,2,14,15,16,17,18,19,20,21,22,23,24,],[-12,8,8,8,8,8,8,8,8,8,8,8,8,]),'NEXT':([0,3,4,5,6,7,8,9,10,11,12,13,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'RELEASE':([1,2,14,15,16,17,18,19,20,21,22,23,24,],[-12,10,10,10,10,10,10,10,10,10,10,10,10,]),'LITERAL':([0,3,4,5,6,7,8,9,10,11,12,13,],[1,1,1,1,1,1,1,1,1,1,1,1,]),'FUTURE':([0,3,4,5,6,7,8,9,10,11,12,13,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'NOT':([0,3,4,5,6,7,8,9,10,11,12,13,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'IMPLICATION':([1,2,14,15,16,17,18,19,20,21,22,23,24,],[-12,11,11,11,11,11,11,11,11,11,11,11,11,]),'WEAK_UNTIL':([1,2,14,15,16,17,18,19,20,21,22,23,24,],[-12,13,13,13,13,13,13,13,13,13,13,13,13,]),'UNTIL':([1,2,14,15,16,17,18,19,20,21,22,23,24,],[-12,12,12,12,12,12,12,12,12,12,12,12,12,]),'OR':([1,2,14,15,16,17,18,19,20,21,22,23,24,],[-12,9,9,9,9,9,9,9,9,9,9,9,9,]),'$end':([1,2,14,15,16,17,18,19,20,21,22,23,24,],[-12,0,-6,-8,-7,-3,-1,-5,-2,-10,-4,-9,-11,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr':([0,3,4,5,6,7,8,9,10,11,12,13,],[2,14,15,16,17,18,19,20,21,22,23,24,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> expr AND expr','expr',3,'p_expr','parser.py',8),
  ('expr -> expr OR expr','expr',3,'p_expr','parser.py',9),
  ('expr -> NOT expr','expr',2,'p_expr','parser.py',10),
  ('expr -> expr IMPLICATION expr','expr',3,'p_expr','parser.py',11),
  ('expr -> expr EQUALS expr','expr',3,'p_expr','parser.py',12),
  ('expr -> GLOBAL expr','expr',2,'p_expr','parser.py',13),
  ('expr -> FUTURE expr','expr',2,'p_expr','parser.py',14),
  ('expr -> NEXT expr','expr',2,'p_expr','parser.py',15),
  ('expr -> expr UNTIL expr','expr',3,'p_expr','parser.py',16),
  ('expr -> expr RELEASE expr','expr',3,'p_expr','parser.py',17),
  ('expr -> expr WEAK_UNTIL expr','expr',3,'p_expr','parser.py',18),
  ('expr -> LITERAL','expr',1,'p_expr','parser.py',19),
]
